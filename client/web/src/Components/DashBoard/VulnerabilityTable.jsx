

const vulnerabilityData = [
  { id: 1, fuzzResult: 'Buffer Overflow', vulnerability: 'Memory Corruption', severity: 'critical' },
  { id: 2, fuzzResult: 'SQL Injection', vulnerability: 'Input Validation', severity: 'high' },
  { id: 3, fuzzResult: 'Cross-Site Scripting', vulnerability: 'XSS', severity: 'medium' },
  { id: 4, fuzzResult: 'Path Traversal', vulnerability: 'File System Access', severity: 'low' },
  { id: 5, fuzzResult: 'Remote Code Execution', vulnerability: 'Command Injection', severity: 'critical' },
];

const getSeverityColor = (severity) => {
  switch (severity) {
    case 'low': return 'bg-yellow-900 text-yellow-300';
    case 'medium': return 'bg-orange-900 text-orange-300';
    case 'high': return 'bg-red-900 text-red-300';
    case 'critical': return 'bg-red-700 text-white';
    default: return '';
  }
};

const VulnerabilityTable = () => {
  return (
    <div className="overflow-x-auto bg-gray-800 text-gray-200 p-4 rounded-lg shadow-lg ml-10">
      <table className="min-w-full border-collapse rounded-lg overflow-hidden">
        <thead>
          <tr className="bg-gray-900">
            <th className="py-4 px-6 text-left">S.No.</th>
            <th className="py-4 px-6 text-left">Fuzz Result</th>
            <th className="py-4 px-6 text-left">Vulnerability</th>
            <th className="py-4 px-6 text-left">Severity</th>
          </tr>
        </thead>
        <tbody>
          {vulnerabilityData.map((item) => (
            <tr key={item.id} className="hover:bg-gray-700 transition duration-300 ease-in-out">
              <td className="py-4 px-6">{item.id}</td>
              <td className="py-4 px-6">{item.fuzzResult}</td>
              <td className="py-4 px-6">{item.vulnerability}</td>
              <td className="py-4 px-6">
                <span className={`px-3 py-1 rounded-full text-sm font-semibold ${getSeverityColor(item.severity)}`}>
                  {item.severity.charAt(0).toUpperCase() + item.severity.slice(1)}
                </span>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default VulnerabilityTable;
