import asyncHandler from 'express-async-handler';
import Vulnerability from '../models/VulnerabilityModel.js';

const getAllVulnerabilities = asyncHandler(async (req, res) => {
    try {
        // const vulnerabilities = await Vulnerability.find().populate('fuzzResult', 'targetUrl fuzzType');
        const vulnerabilities = await Vulnerability.find().populate({
            path: 'fuzzResult',
            match: { user: req.user._id },
            select: 'targetUrl fuzzType'
        });

        res.status(200).json({
            success: true,
            message: "Fetched all vulnerabilities",
            vulnerabilities
        });
    } catch (error) {
        res.status(500).json({
            success: false,
            message: 'Server error',
            error: error.message
        });
    }
});

const getVulnerabilityById = asyncHandler(async (req, res) => {
    try {
        // const vulnerability = await Vulnerability.findById(req.params.id).populate('fuzzResult', 'targetUrl fuzzType');
        const vulnerability = await Vulnerability.findById(req.params.id).populate({
            path: 'fuzzResult',
            match: { user: req.user._id },
            select: 'targetUrl fuzzType'
        });
        if (!vulnerability) {
            return res.status(404).json({
                success: false,
                message: 'Vulnerability not found'
            });
        }
        res.status(200).json({
            success: true,
            vulnerability,
            message: "Fetched vulnerability by id"
        });
    } catch (error) {
        res.status(500).json({
            success: false,
            message: 'Server error',
            error: error.message
        });
    }
});

export { getAllVulnerabilities, getVulnerabilityById };
